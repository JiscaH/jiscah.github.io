{
    "type": [
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2
    ],
    "data": [
        "\nR version 4.0.2 (2020-06-22) -- \"Taking Off Again\"\nCopyright (C) 2020 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\n",
        "Type 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "> ",
        "library(sequoia)",
        "> ",
        "setwd(\"D:/Sequoia/test/test_simdata\")",
        "> ",
        "Ped_deer <- read.table(\"Ped_2k.txt\", header=T, stringsAsFactors=F)",
        "> ",
        "LH_deer <- read.table(\"CodeSexBY.txt\", header=T, stringsAsFactors=F)",
        "> ",
        "CntA <- array(dim=c(2,10,7,5,2))",
        "> ",
        "TimeM <- matrix(NA,2,10)",
        "> ",
        "LL <- c(400, 200, 100)",
        "> ",
        "l <- 1",
        "> ",
        "  for (x in 1:10) {",
        "+ ",
        "    cat(x, \"\\t\", format(Sys.time(), \"%H:%M:%S\"), \"\\n\")",
        "+ ",
        "    GM <- SimGeno(Ped = Ped_deer, nSnp = LL[l], ParMis=0.4, SnpError = 1e-3)",
        "+ ",
        "#    write.table(GM, paste0(\"2020-03/deer_GMs/GM_b\",x,\".txt\"), col.names=FALSE)  # TEMP! crash-test",
        "+ ",
        "",
        "+ ",
        "    TimeM[l,x] <- system.time(SeqOUT <- sequoia(GenoM = GM,  LifeHistData = LH_deer,",
        "+ ",
        "                                              Tassign=0.5, Err=1e-3, Module=\"ped\",",
        "+ ",
        "                                              quiet=TRUE, UseAge=\"yes\", Plot=FALSE))[\"elapsed\"]",
        "+ ",
        "    PCC <- PedCompare(Ped1=Ped_deer, Ped2=SeqOUT$Pedigree)$Counts",
        "+ ",
        "    CntA[l,x,,,] <- PCC",
        "+ ",
        "",
        "+ ",
        "    cat(\"AR: \", PCC[\"TT\",\"Match\",], \"\\t\",",
        "+ ",
        "        \"ER: \", apply(PCC[\"TT\",c(\"Mismatch\",\"P2only\"), ], 2, sum), \"\\n\",",
        "+ ",
        "        \"Min LLR: \", apply(SeqOUT$Pedigree[,4:6], 2, min, na.rm=TRUE), \"\\n\")",
        "+ ",
        "    if (LL[l]==400 & sum(PCC[\"TT\", c(\"Mismatch\", \"P2only\"), ]) > 1)  break",
        "+ ",
        "    if (LL[l]==200 & sum(PCC[\"TT\", c(\"Mismatch\", \"P2only\"), ]) > 10)  break",
        "+ ",
        "    if (LL[l]==400 & sum(PCC[\"TT\", c(\"Match\"), ]) < 2560 )  break",
        "+ ",
        "",
        "+ ",
        "    ParLLR <- list(\"1P\" = SeqOUT$Pedigree[is.na(SeqOUT$Pedigree$LLRpair), c(\"LLRdam\", \"LLRsire\")],",
        "+ ",
        "                   \"2P\" = SeqOUT$Pedigree$LLRpair)",
        "+ ",
        "    if (min(ParLLR[[\"1P\"]], na.rm=TRUE) < -10 | min(ParLLR[[\"2P\"]], na.rm=TRUE) < -10)  break",
        "+ ",
        "  }",
        "1 \t 16:00:50 \nAR:  1452 1128 \t ER:  0 0 \n Min LLR:  -0.83 -1.55 0.65 \n2 \t 16:13:11 \nAR:  1466 1123 \t ER:  0 0 \n Min LLR:  -1.37 -1.31 -0.11 \n3 \t 16:31:17 \nAR:  1445 1127 \t ER:  3 1 \n Min LLR:  -1.34 -1.58 -0.02 \n",
        "> ",
        "PC <- PedCompare(Ped_deer, SeqOUT$Pedigree)",
        "> ",
        "PC$Counts[\"TT\",,]",
        "          parent\nclass       dam sire\n  Total    1642 1202\n  Match    1445 1127\n  Mismatch    3    1\n  P1only    194   74\n  P2only      0    0\n",
        "> ",
        "PedM <- PC$MergedPed",
        "> ",
        "PedM[PedM$dam.class==\"Mismatch\", 1:8]",
        "       id dam.1 sire.1 dam.2 sire.2  id.r dam.r sire.r\n276 CHK09 SOX04   <NA> F0027   <NA> CHK09 CHK07   <NA>\n278 CHK15 SOX04   <NA> F0027   <NA> CHK15 CHK07   <NA>\n543 F0027 SOX04  UKL05 F0016  M0018 CHK07 SEQ01  CLT95\n",
        "> ",
        "PedM[which(PedM$dam.1==\"SOX04\"), ]",
        "        id dam.1 sire.1 dam.2 sire.2  id.r dam.r sire.r id.dam.cat id.sire.cat dam.class\n276  CHK09 SOX04   <NA> F0027   <NA> CHK09 CHK07   <NA>         GD          GX  Mismatch\n277  CHK13 SOX04   <NA>  <NA>   <NA> CHK13  <NA>   <NA>         GD          GX    P1only\n278  CHK15 SOX04   <NA> F0027   <NA> CHK15 CHK07   <NA>         GD          GX  Mismatch\n543  F0027 SOX04  UKL05 F0016  M0018 CHK07 SEQ01  CLT95         DD          DG  Mismatch\n1983  <NA> SOX04   <NA>  <NA>   <NA> CHK12  <NA>   <NA>         XD          XX",
        "    P1only\n     sire.class\n276           _\n277           _\n278           _\n543    Mismatch\n1983          _\n",
        "> ",
        "PedM[which(PedM$dam.2==\"F0027\"), ]",
        "       id dam.1 sire.1 dam.2 sire.2  id.r dam.r sire.r id.dam.cat id.sire.cat dam.class sire.class\n276 CHK09 SOX04   <NA> F0027   <NA> CHK09 CHK07   <NA>         GD          GX  Mismatch          _\n278 CHK15 SOX04   <NA> F0027   <NA> CHK15 CHK07   <NA>         GD          GX  Mismatch          _\n295 CHY12 CHK07  KAR02 F0027  KAR02 CHY12 CHK07   <NA>         GD          GG     Match      Match\n296 CHY14 CHK07  FRT03 F0027  FRT03 CHY14 CHK07   <NA>         GD          GG     Match      Match\n",
        "> ",
        "PedM[which(PedM$dam.2==\"F0016\"), ]",
        "        id dam.1 sire.1 dam.2 sire.2  id.r dam.r sire.r id.dam.cat id.sire.cat dam.class sire.class\n543  F0027 SOX04  UKL05 F0016  M0018 CHK07 SEQ01  CLT95         DD          DG  Mismatch   Mismatch\n574  F0058 SEQ01  STUAR F0016  M0022 SOX09 SEQ01  STUAR         DD          DD     Match      Match\n576  F0060 SEQ01  ALD99 F0016  M0040 SOX08 SEQ01  ALD99         DD          DD     Match      Match\n1560 SOX06 SEQ01  CLT95 F0016  M0018 SOX06 SEQ01  CLT95         GD          GD     Match      Match\n1561 SOX07 SEQ01",
        "  SYC97 F0016  M0013 SOX07 SEQ01  SYC97         GD          GD     Match      Match\n1562 SOX10 SEQ01  BRAVO F0016  BRAVO SOX10 SEQ01   <NA>         GD          GG     Match      Match\n1563 SOX11 SEQ01  BSY02 F0016  M0041 SOX11 SEQ01  BSY02         GD          GD     Match      Match\n1564 SOX12 SEQ01  WSD06 F0016  WSD06 SOX12 SEQ01   <NA>         GD          GG     Match      Match\n1565 SOX13 SEQ01  MOU05 F0016  M0020 SOX13 SEQ01  MOU05         GD          GD     Match      Match\n1566 SOX14 SEQ01  SARGA F0016",
        "  SARGA SOX14 SEQ01   <NA>         GD          GG     Match      Match\n1567 SOX15 SEQ01   <NA> F0016   <NA> SOX15 SEQ01   <NA>         GD          GX     Match          _\n",
        "> ",
        "PC <- PedCompare(Ped_deer, SeqOUT$Pedigree)",
        "> ",
        "writeSeq(SeqOUT, GM, folder=\"2021-02/Ped3-K\")",
        "Output written to D:/Sequoia/test/test_simdata/2021-02/Ped3-K\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "PedM[which(PedM$dam.2==\"F0016\"), c(\"id\",\"id.r\", \"dam.1\", \"dam.2\")]",
        "        id  id.r dam.1 dam.2\n543  F0027 CHK07 SOX04 F0016\n574  F0058 SOX09 SEQ01 F0016\n576  F0060 SOX08 SEQ01 F0016\n1560 SOX06 SOX06 SEQ01 F0016\n1561 SOX07 SOX07 SEQ01 F0016\n1562 SOX10 SOX10 SEQ01 F0016\n1563 SOX11 SOX11 SEQ01 F0016\n1564 SOX12 SOX12 SEQ01 F0016\n1565 SOX13 SOX13 SEQ01 F0016\n1566 SOX14 SOX14 SEQ01 F0016\n1567 SOX15 SOX15 SEQ01 F0016\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "PedM[which(PedM$dam.2==\"F0027\"), c(\"id\",\"id.r\", \"dam.1\", \"dam.2\")]",
        "       id  id.r dam.1 dam.2\n276 CHK09 CHK09 SOX04 F0027\n278 CHK15 CHK15 SOX04 F0027\n295 CHY12 CHY12 CHK07 F0027\n296 CHY14 CHY14 CHK07 F0027\n",
        "> ",
        "",
        "> ",
        "PedM[which(PedM$dam.2==\"F0027\"), ]",
        "       id dam.1 sire.1 dam.2 sire.2  id.r dam.r sire.r id.dam.cat id.sire.cat dam.class sire.class\n276 CHK09 SOX04   <NA> F0027   <NA> CHK09 CHK07   <NA>         GD          GX  Mismatch          _\n278 CHK15 SOX04   <NA> F0027   <NA> CHK15 CHK07   <NA>         GD          GX  Mismatch          _\n295 CHY12 CHK07  KAR02 F0027  KAR02 CHY12 CHK07   <NA>         GD          GG     Match      Match\n296 CHY14 CHK07  FRT03 F0027  FRT03 CHY14 CHK07   <NA>         GD          GG     Match      Match\n",
        "> ",
        "PedM[which(PedM$dam.2==\"F0027\"), 1:5]",
        "       id dam.1 sire.1 dam.2 sire.2\n276 CHK09 SOX04   <NA> F0027   <NA>\n278 CHK15 SOX04   <NA> F0027   <NA>\n295 CHY12 CHK07  KAR02 F0027  KAR02\n296 CHY14 CHK07  FRT03 F0027  FRT03\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "PedM[which(PedM$dam.1==\"SOX04\"), 1:5]",
        "        id dam.1 sire.1 dam.2 sire.2\n276  CHK09 SOX04   <NA> F0027   <NA>\n277  CHK13 SOX04   <NA>  <NA>   <NA>\n278  CHK15 SOX04   <NA> F0027   <NA>\n543  F0027 SOX04  UKL05 F0016  M0018\n1983  <NA> SOX04   <NA>  <NA>   <NA>\n",
        "> ",
        "PedM[which(PedM$dam.1==\"CHK07\"), 1:5]",
        "       id dam.1 sire.1 dam.2 sire.2\n295 CHY12 CHK07  KAR02 F0027  KAR02\n296 CHY14 CHK07  FRT03 F0027  FRT03\n",
        "> ",
        "which(rownames(GM) == \"CHK09\")",
        "[1] 1554\n",
        "> ",
        "which(rownames(GM) == \"CHK15\")",
        "[1] 1556\n",
        "> ",
        "which(rownames(GM) == \"CHY12\")",
        "[1] 1723\n",
        "> ",
        "",
        "> ",
        "which(rownames(GM) == \"CHY14\")",
        "[1] 1724\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "Ped_deer[Ped_deer$Code %in% c(\"SOX04\", \"CHK07\"), ]",
        "[1] id   dam  sire\n<0 rows> (or 0-length row.names)\n",
        "> ",
        "Ped_deer[Ped_deer$id %in% c(\"SOX04\", \"CHK07\"), ]",
        "        id   dam  sire\n1632 SOX04 SEQ01 CLT95\n1811 CHK07 SOX04 UKL05\n",
        "> ",
        "Ped_deer[Ped_deer$id %in% c(\"SOX04\", \"CHK07\", \"UKL05\"), ]",
        "        id   dam  sire\n1632 SOX04 SEQ01 CLT95\n1696 UKL05 FDL99 CLT95\n1811 CHK07 SOX04 UKL05\n",
        "> ",
        "PedS <- read.table(\"2021-02/Ped3-K/Pedigree_seq.txt\", header=TRUE)",
        "Error in file(file, \"rt\") : cannot open the connection\n",
        "In addition: ",
        "Warning message:\n",
        "In file(file, \"rt\") :",
        "\n ",
        " cannot open file '2021-02/Ped3-K/Pedigree_seq.txt': No such file or directory\n",
        "> ",
        "PedS <- read.table(\"2021-02/Ped3-K/Pedigree_round04.txt\", header=TRUE)",
        "> ",
        "PCS <- PedCompare(Ped_deer, PedS)",
        "> ",
        "PCS$Counts[\"TT\",,]",
        "          parent\nclass       dam sire\n  Total    1642 1202\n  Match    1444 1126\n  Mismatch    1    0\n  P1only    197   76\n  P2only      0    0\n",
        "> ",
        "PCS$MergedPed[PCS$MergedPed$dam.class==\"Mismatch\", ]",
        "       id dam.1 sire.1 dam.2 sire.2  id.r dam.r sire.r id.dam.cat id.sire.cat dam.class sire.class\n543 F0027 SOX04  UKL05 F0016  UKL05 CHK07 SEQ01   <NA>         DD          DG  Mismatch      Match\n",
        "> ",
        "PedS <- read.table(\"2021-02/Ped3-K/Pedigree_seq.txt\", header=TRUE)",
        "> ",
        "PCS <- PedCompare(Ped_deer, PedS)",
        "> ",
        "PCS$Counts[\"TT\",,]",
        "          parent\nclass       dam sire\n  Total    1642 1202\n  Match    1444 1126\n  Mismatch    1    0\n  P1only    197   76\n  P2only      0    0\n",
        "> ",
        "SummarySeq(PedS, Panels=\"LLR\")",
        "> ",
        "PedS1 <- PedS",
        "> ",
        "PedS <- read.table(\"2021-02/Ped3-K/Pedigree_seq.txt\", header=TRUE)",
        "> ",
        "PCS <- PedCompare(Ped_deer, PedS)",
        "> ",
        "PCS$Counts[\"TT\",,]",
        "          parent\nclass       dam sire\n  Total    1642 1202\n  Match    1439 1124\n  Mismatch    1    0\n  P1only    202   78\n  P2only      0    0\n",
        "> ",
        "PCX <- PedCompare(PedS1, PedS, Plot=F)",
        "> ",
        "PCX$Counts[\"TT\",,]",
        "          parent\nclass       dam sire\n  Total    1445 1126\n  Match    1440 1124\n  Mismatch    0    0\n  P1only      5    2\n  P2only      0    0\n",
        "> ",
        "PCX$MergedPed[PCX$MergedPed$dam.class == \"P1only\", ]",
        "        id dam.1 sire.1 dam.2 sire.2  id.r dam.r sire.r id.dam.cat id.sire.cat dam.class sire.class\n298  CLK06 F0087  M0023  <NA>  M0023 CLK06  <NA>  M0023         GD          GD    P1only      Match\n299  CLK08 F0087  PERCY  <NA>  PERCY CLK08  <NA>   <NA>         GD          GG    P1only      Match\n517  F0001 F0087  PERCY  <NA>  PERCY F0001  <NA>   <NA>         DD          DG    P1only      Match\n1572 SPI01 F0059  M0052  <NA>  M0050 SPI01  <NA>  M0052         GD          GD    P1only      Match\n1887  <NA> F0070",
        "  M0012  <NA>   <NA> F0087  <NA>   <NA>         DD          DD    P1only     P1only\n",
        "> ",
        "PCS$MergedPed[which(PCS$MergedPed$dam.2 == \"TIN04\"), 1:8]",
        "        id dam.1 sire.1 dam.2 sire.2  id.r dam.r sire.r\n1702 TRX09 TIN04   <NA> TIN04   <NA> TRX09  <NA>   <NA>\n1703 TRX12 TIN04   <NA> TIN04   <NA> TRX12  <NA>   <NA>\n1704 TRX13 TIN04  LAPHR TIN04  M0015 TRX13  <NA>  LAPHR\n",
        "> ",
        "Ped_deer[Ped_deer$id==\"CLK06\", ]",
        "        id   dam  sire\n1223 CLK06 GRA99 HAW99\n",
        "> ",
        "Ped_deer[which(Ped_deer$dam==\"CLK04\"), ]",
        "        id   dam  sire\n1908 RDD08 CLK04 PERCY\n1909 RDD10 CLK04 PERCY\n1910 RDD12 CLK04 BROWN\n1911 RDD13 CLK04 SPD01\n1912 RDD14 CLK04 SYC02\n1913 RDD15 CLK04  <NA>\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "PCS$MergedPed[which(PCS$MergedPed$dam.2 == \"GRA99\"), 1:8]",
        "[1] id     dam.1  sire.1 dam.2  sire.2 id.r   dam.r  sire.r\n<0 rows> (or 0-length row.names)\n",
        "> ",
        "PCS$MergedPed[which(PCS$MergedPed$dam.1 == \"GRA99\"), 1:8]",
        "       id dam.1 sire.1 dam.2 sire.2  id.r dam.r sire.r\n298 CLK06 GRA99  HAW99  <NA>  M0023 CLK06  <NA>  HAW99\n299 CLK08 GRA99  PERCY  <NA>  PERCY CLK08  <NA>   <NA>\n517 F0001 GRA99  PERCY  <NA>  PERCY CLK04  <NA>   <NA>\n",
        "> ",
        "which(rownames(GM)==\"CLK06\")",
        "[1] 1000\n",
        "> ",
        "which(rownames(GM)==\"CLK08\")",
        "[1] 1001\n",
        "> ",
        "Ped_deer[Ped_deer$id == \"GRA99\", ]",
        "       id   dam  sire\n576 GRA99 FAN90 BASIL\n",
        "> ",
        "PedS[PedS$id %in% c(\"FAN90\", \"BASIL\"), ]",
        " [1] id      dam     sire    LLRdam  LLRsire LLRpair OHdam   OHsire  MEpair  RowO    RowD    RowS   \n[13] Sex    \n<0 rows> (or 0-length row.names)\n",
        "> ",
        "PedM[which(PedM$dam.1==\"FAN90\"), 1:8]",
        "       id dam.1 sire.1 dam.2 sire.2  id.r dam.r sire.r\n603 F0087 FAN90  BASIL F0070  M0012 GRA99 FAN90  BASIL\n730 GRA00 FAN90  BASIL F0070  M0012 GRA00 FAN90  BASIL\n731 GRA01 FAN90  TYS89 F0070  M0009 GRA01 FAN90  TYS89\n732 GRA02 FAN90  WINDY F0070  M0026 GRA02 FAN90  WINDY\n733 GRA03 FAN90  KKONG F0070  KKONG GRA03 FAN90   <NA>\n734 GRA04 FAN90  TNG95 F0070  TNG95 GRA04 FAN90   <NA>\n735 GRA06 FAN90   <NA> F0070   <NA> GRA06 FAN90   <NA>\n736 GRA07 FAN90  EGR95 F0070  EGR95 GRA07 FAN90   <NA>\n",
        "> ",
        "PedS2 <- PedS",
        "> ",
        "PedS <- read.table(\"2021-02/Ped3-K/Pedigree_round03.txt\", header=TRUE)",
        "> ",
        "PCS <- PedCompare(Ped_deer, PedS)",
        "> ",
        "PCS$Counts[\"TT\",,]",
        "          parent\nclass       dam sire\n  Total    1642 1202\n  Match    1441 1127\n  Mismatch    1    0\n  P1only    200   75\n  P2only      0    0\n",
        "> ",
        "PedS <- read.table(\"2021-02/Ped3-K/Pedigree_round05.txt\", header=TRUE)",
        "> ",
        "PCS <- PedCompare(Ped_deer, PedS)",
        "> ",
        "PCS$Counts[\"TT\",,]",
        "          parent\nclass       dam sire\n  Total    1642 1202\n  Match    1442 1127\n  Mismatch    1    0\n  P1only    199   75\n  P2only      0    0\n",
        "> ",
        "PedS <- read.table(\"2021-02/Ped3-K/Pedigree_seq.txt\", header=TRUE)",
        "> ",
        "PCS <- PedCompare(Ped_deer, PedS)",
        "> ",
        "PCS$Counts[\"TT\",,]",
        "          parent\nclass       dam sire\n  Total    1642 1202\n  Match    1442 1127\n  Mismatch    1    0\n  P1only    199   75\n  P2only      0    0\n",
        "> ",
        "SummarySeq(PedS, Panels=\"LLR\")",
        "\nRestarting R session...\n\n",
        "> ",
        "library(sequoia)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "CntA <- array(dim=c(2,10,7,5,2))",
        "> ",
        "TimeM <- matrix(NA,2,10)",
        "> ",
        "LL <- c(400, 200, 100)",
        "> ",
        "  for (x in 1:10) {",
        "+ ",
        "    cat(x, \"\\t\", format(Sys.time(), \"%H:%M:%S\"), \"\\n\")",
        "+ ",
        "    GM <- SimGeno(Ped = Ped_deer, nSnp = LL[l], ParMis=0.4, SnpError = 1e-3)",
        "+ ",
        "#    write.table(GM, paste0(\"2020-03/deer_GMs/GM_b\",x,\".txt\"), col.names=FALSE)  # TEMP! crash-test",
        "+ ",
        "",
        "+ ",
        "    TimeM[l,x] <- system.time(SeqOUT <- sequoia(GenoM = GM,  LifeHistData = LH_deer,",
        "+ ",
        "                                              Tassign=0.5, Err=1e-3, Module=\"ped\",",
        "+ ",
        "                                              quiet=TRUE, UseAge=\"yes\", Plot=FALSE))[\"elapsed\"]",
        "+ ",
        "    PCC <- PedCompare(Ped1=Ped_deer, Ped2=SeqOUT$Pedigree)$Counts",
        "+ ",
        "    CntA[l,x,,,] <- PCC",
        "+ ",
        "",
        "+ ",
        "    cat(\"AR: \", PCC[\"TT\",\"Match\",], \"\\t\",",
        "+ ",
        "        \"ER: \", apply(PCC[\"TT\",c(\"Mismatch\",\"P2only\"), ], 2, sum), \"\\n\",",
        "+ ",
        "        \"Min LLR: \", apply(SeqOUT$Pedigree[,4:6], 2, min, na.rm=TRUE), \"\\n\")",
        "+ ",
        "    if (LL[l]==400 & sum(PCC[\"TT\", c(\"Mismatch\", \"P2only\"), ]) > 1)  break",
        "+ ",
        "    if (LL[l]==200 & sum(PCC[\"TT\", c(\"Mismatch\", \"P2only\"), ]) > 10)  break",
        "+ ",
        "    if (LL[l]==400 & sum(PCC[\"TT\", c(\"Match\"), ]) < 2560 )  break",
        "+ ",
        "",
        "+ ",
        "    ParLLR <- list(\"1P\" = SeqOUT$Pedigree[is.na(SeqOUT$Pedigree$LLRpair), c(\"LLRdam\", \"LLRsire\")],",
        "+ ",
        "                   \"2P\" = SeqOUT$Pedigree$LLRpair)",
        "+ ",
        "    if (min(ParLLR[[\"1P\"]], na.rm=TRUE) < -10 | min(ParLLR[[\"2P\"]], na.rm=TRUE) < -10)  break",
        "+ ",
        "  }",
        "1 \t 21:28:11 \nAR:  1441 1106 \t ER:  0 0 \n Min LLR:  -0.77 -0.07 1.18 \n",
        "> ",
        "(1441 + 1106) ",
        "[1] 2547\n",
        "> ",
        "(1441 + 1106) / (1642 + 1202)",
        "[1] 0.8955696\n",
        "> ",
        "x <- 2",
        "> ",
        "  for (x in 2:10) {",
        "+ ",
        "    cat(x, \"\\t\", format(Sys.time(), \"%H:%M:%S\"), \"\\n\")",
        "+ ",
        "    GM <- SimGeno(Ped = Ped_deer, nSnp = LL[l], ParMis=0.4, SnpError = 1e-3)",
        "+ ",
        "#    write.table(GM, paste0(\"2020-03/deer_GMs/GM_b\",x,\".txt\"), col.names=FALSE)  # TEMP! crash-test",
        "+ ",
        "",
        "+ ",
        "    TimeM[l,x] <- system.time(SeqOUT <- sequoia(GenoM = GM,  LifeHistData = LH_deer,",
        "+ ",
        "                                              Tassign=0.5, Err=1e-3, Module=\"ped\",",
        "+ ",
        "                                              quiet=TRUE, UseAge=\"yes\", Plot=FALSE))[\"elapsed\"]",
        "+ ",
        "    PCC <- PedCompare(Ped1=Ped_deer, Ped2=SeqOUT$Pedigree)$Counts",
        "+ ",
        "    CntA[l,x,,,] <- PCC",
        "+ ",
        "",
        "+ ",
        "    cat(\"AR: \", PCC[\"TT\",\"Match\",], \"\\t\",",
        "+ ",
        "        \"ER: \", apply(PCC[\"TT\",c(\"Mismatch\",\"P2only\"), ], 2, sum), \"\\n\",",
        "+ ",
        "        \"Min LLR: \", apply(SeqOUT$Pedigree[,4:6], 2, min, na.rm=TRUE), \"\\n\")",
        "+ ",
        "    if (LL[l]==400 & sum(PCC[\"TT\", c(\"Mismatch\", \"P2only\"), ]) > 1)  break",
        "+ ",
        "    if (LL[l]==200 & sum(PCC[\"TT\", c(\"Mismatch\", \"P2only\"), ]) > 10)  break",
        "+ ",
        "    if (LL[l]==400 & sum(PCC[\"TT\", c(\"Match\"), ]) < 2560 )  break",
        "+ ",
        "",
        "+ ",
        "    ParLLR <- list(\"1P\" = SeqOUT$Pedigree[is.na(SeqOUT$Pedigree$LLRpair), c(\"LLRdam\", \"LLRsire\")],",
        "+ ",
        "                   \"2P\" = SeqOUT$Pedigree$LLRpair)",
        "+ ",
        "    if (min(ParLLR[[\"1P\"]], na.rm=TRUE) < -10 | min(ParLLR[[\"2P\"]], na.rm=TRUE) < -10)  break",
        "+ ",
        "  }",
        "2 \t 21:45:54 \nAR:  1444 1133 \t ER:  0 0 \n Min LLR:  -3.95 -0.48 0 \n3 \t 22:05:56 \nAR:  1428 1126 \t ER:  0 0 \n Min LLR:  -1 -0.87 0 \n",
        "> ",
        "(1428 + 1126) / (1642 + 1202)",
        "[1] 0.8980309\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "  for (x in 4:10) {",
        "+ ",
        "    cat(x, \"\\t\", format(Sys.time(), \"%H:%M:%S\"), \"\\n\")",
        "+ ",
        "    GM <- SimGeno(Ped = Ped_deer, nSnp = LL[l], ParMis=0.4, SnpError = 1e-3)",
        "+ ",
        "#    write.table(GM, paste0(\"2020-03/deer_GMs/GM_b\",x,\".txt\"), col.names=FALSE)  # TEMP! crash-test",
        "+ ",
        "",
        "+ ",
        "    TimeM[l,x] <- system.time(SeqOUT <- sequoia(GenoM = GM,  LifeHistData = LH_deer,",
        "+ ",
        "                                              Tassign=0.5, Err=1e-3, Module=\"ped\",",
        "+ ",
        "                                              quiet=TRUE, UseAge=\"yes\", Plot=FALSE))[\"elapsed\"]",
        "+ ",
        "    PCC <- PedCompare(Ped1=Ped_deer, Ped2=SeqOUT$Pedigree)$Counts",
        "+ ",
        "    CntA[l,x,,,] <- PCC",
        "+ ",
        "",
        "+ ",
        "    cat(\"AR: \", PCC[\"TT\",\"Match\",], \"\\t\",",
        "+ ",
        "        \"ER: \", apply(PCC[\"TT\",c(\"Mismatch\",\"P2only\"), ], 2, sum), \"\\n\",",
        "+ ",
        "        \"Min LLR: \", apply(SeqOUT$Pedigree[,4:6], 2, min, na.rm=TRUE), \"\\n\")",
        "+ ",
        "    if (LL[l]==400 & sum(PCC[\"TT\", c(\"Mismatch\", \"P2only\"), ]) > 1)  break",
        "+ ",
        "    if (LL[l]==200 & sum(PCC[\"TT\", c(\"Mismatch\", \"P2only\"), ]) > 10)  break",
        "+ ",
        "#    if (LL[l]==400 & sum(PCC[\"TT\", c(\"Match\"), ]) < 2560 )  break",
        "+ ",
        "",
        "+ ",
        "    ParLLR <- list(\"1P\" = SeqOUT$Pedigree[is.na(SeqOUT$Pedigree$LLRpair), c(\"LLRdam\", \"LLRsire\")],",
        "+ ",
        "                   \"2P\" = SeqOUT$Pedigree$LLRpair)",
        "+ ",
        "    if (min(ParLLR[[\"1P\"]], na.rm=TRUE) < -10 | min(ParLLR[[\"2P\"]], na.rm=TRUE) < -10)  break",
        "+ ",
        "  }",
        "4 \t 22:29:45 \nAR:  1451 1127 \t ER:  0 0 \n Min LLR:  -0.84 -0.59 1.07 \n5 \t 22:48:26 \n",
        "Timing stopped at: 80.4 0.38 80.78\n",
        "> ",
        "mean(apply(CntA[,7,2,],1,sum)/(1642+1202), na.rm=T)   # 0.881",
        "Error in CntA[, 7, 2, ] : incorrect number of dimensions\n",
        "> ",
        "mean(apply(CntA[,7,c(3,5),],1,sum)/(2*1998), na.rm=T)  # 0.0023",
        "Error in CntA[, 7, c(3, 5), ] : incorrect number of dimensions\n",
        "> ",
        "mean(TimeM, na.rm=TRUE) ",
        "[1] 1014.693\n",
        "> ",
        "",
        "> ",
        "mean(apply(CntA[l,,7,2,],1,sum)/(1642+1202), na.rm=T)   # 0.898",
        "[1] 0.9015471\n",
        "> ",
        "mean(apply(CntA[l,,7,c(3,5),],1,sum)/(2*1998), na.rm=T)  # 0.000325",
        "[1] 0\n",
        "> ",
        "mean(TimeM[l,], na.rm=TRUE)  # 1625s",
        "[1] 1014.693\n",
        "> ",
        "CntA <- array(dim=c(2,10,7,5,2))",
        "> ",
        "TimeM <- matrix(NA,2,10)",
        "> ",
        "LL <- c(400, 200, 100)",
        "> ",
        "for (l in 1:2) {",
        "+ ",
        "  cat(\"\\n\\n LL: \", LL[l], \"\\n\")",
        "+ ",
        "  for (x in 1:10) {",
        "+ ",
        "    cat(x, \"\\t\", format(Sys.time(), \"%H:%M:%S\"), \"\\n\")",
        "+ ",
        "    GM <- SimGeno(Ped = Ped_deer, nSnp = LL[l], ParMis=0.4, SnpError = 1e-3)",
        "+ ",
        "#    write.table(GM, paste0(\"2020-03/deer_GMs/GM_b\",x,\".txt\"), col.names=FALSE)  # TEMP! crash-test",
        "+ ",
        "",
        "+ ",
        "    TimeM[l,x] <- system.time(SeqOUT <- sequoia(GenoM = GM,  LifeHistData = LH_deer,",
        "+ ",
        "                                              Tassign=0.5, Err=1e-3, Module=\"ped\",",
        "+ ",
        "                                              quiet=TRUE, UseAge=\"yes\", Plot=FALSE))[\"elapsed\"]",
        "+ ",
        "    PCC <- PedCompare(Ped1=Ped_deer, Ped2=SeqOUT$Pedigree)$Counts",
        "+ ",
        "    CntA[l,x,,,] <- PCC",
        "+ ",
        "",
        "+ ",
        "    cat(\"AR: \", PCC[\"TT\",\"Match\",], \"\\t\",",
        "+ ",
        "        \"ER: \", apply(PCC[\"TT\",c(\"Mismatch\",\"P2only\"), ], 2, sum), \"\\n\",",
        "+ ",
        "        \"Min LLR: \", apply(SeqOUT$Pedigree[,4:6], 2, min, na.rm=TRUE), \"\\n\")",
        "+ ",
        "#    if (LL[l]==400 & sum(PCC[\"TT\", c(\"Mismatch\", \"P2only\"), ]) > 1)  break",
        "+ ",
        "#    if (LL[l]==200 & sum(PCC[\"TT\", c(\"Mismatch\", \"P2only\"), ]) > 10)  break",
        "+ ",
        "#    if (LL[l]==400 & sum(PCC[\"TT\", c(\"Match\"), ]) < 2560 )  break",
        "+ ",
        "",
        "+ ",
        "#    ParLLR <- list(\"1P\" = SeqOUT$Pedigree[is.na(SeqOUT$Pedigree$LLRpair), c(\"LLRdam\", \"LLRsire\")],",
        "+ ",
        "#                   \"2P\" = SeqOUT$Pedigree$LLRpair)",
        "+ ",
        "#    if (min(ParLLR[[\"1P\"]], na.rm=TRUE) < -10 | min(ParLLR[[\"2P\"]], na.rm=TRUE) < -10)  break",
        "+ ",
        "  }",
        "+ ",
        " #  save(CntA, TimeM, file=paste0(\"Output-2021-Jan/Ped_deer_L\",LL,\"_Age-yes_1E3.RData\"))",
        "+ ",
        "}",
        "\n\n LL:  400 \n1 \t 22:55:44 \nAR:  1447 1131 \t ER:  0 0 \n Min LLR:  -2.47 -0.38 0.97 \n2 \t 23:14:59 \nAR:  1428 1124 \t ER:  0 0 \n Min LLR:  -1.71 -1.83 0.54 \n3 \t 23:28:15 \nAR:  1430 1132 \t ER:  0 1 \n Min LLR:  -5.01 -1.69 1.06 \n4 \t 23:47:35 \nAR:  1442 1128 \t ER:  0 0 \n Min LLR:  -1.2 -1.63 0.67 \n5 \t 23:57:47 \nAR:  1475 1132 \t ER:  0 0 \n Min LLR:  -1.1 -2.63 0.06 \n6 \t 00:13:40 \nAR:  1439 1131 \t ER:  0 0 \n Min LLR:  -1.5 -0.66 0 \n7 \t 00:24:09 \nAR:  1448 1131 \t ER:  0 0 \n Min LLR:  -3.36 -1.41 -0.47 \n8 \t 00:44:24 \n",
        "AR:  1452 1127 \t ER:  0 0 \n Min LLR:  -0.97 -2.13 0.36 \n9 \t 00:57:45 \nAR:  1434 1123 \t ER:  2 0 \n Min LLR:  -0.54 -0.91 0.94 \n10 \t 01:11:15 \nAR:  1443 1134 \t ER:  0 0 \n Min LLR:  -1.11 -1.23 0.24 \n\n\n LL:  200 \n1 \t 01:23:26 \nAR:  1398 1094 \t ER:  9 6 \n Min LLR:  -2.59 -2.58 -2.14 \n2 \t 01:41:19 \nAR:  1359 1098 \t ER:  5 3 \n Min LLR:  -7.41 -1.16 0.33 \n3 \t 02:01:11 \nAR:  1361 1090 \t ER:  3 6 \n Min LLR:  -0.9 -1.6 0.45 \n4 \t 02:21:11 \nAR:  1395 1080 \t ER:  7 7 \n Min LLR:  -1.32 -1.22 -0.81 \n5 \t 02:39:59 \nAR:  1383",
        " 1093 \t ER:  4 10 \n Min LLR:  -1.51 -0.92 0.13 \n6 \t 03:03:40 \nAR:  1390 1110 \t ER:  5 8 \n Min LLR:  -1.01 -2.05 -0.53 \n7 \t 03:19:46 \nAR:  1370 1104 \t ER:  0 1 \n Min LLR:  -2.87 -1.48 -0.39 \n8 \t 03:35:48 \nAR:  1401 1091 \t ER:  4 6 \n Min LLR:  -1.86 -0.96 -0.05 \n9 \t 03:55:08 \nAR:  1403 1085 \t ER:  5 4 \n Min LLR:  -1.7 -1.54 -0.58 \n10 \t 04:18:26 \nAR:  1412 1104 \t ER:  2 10 \n Min LLR:  -1.77 -1.26 0.2 \n",
        "> ",
        "mean(apply(CntA[1,,7,2,],1,sum)/(1642+1202), na.rm=T)   # 0.9015",
        "[1] 0.9047468\n",
        "> ",
        "mean(apply(CntA[1,,7,c(3,5),],1,sum)/(2*1998), na.rm=T)  # 0",
        "[1] 7.507508e-05\n",
        "> ",
        "mean(TimeM[1,], na.rm=TRUE)  # 1015s",
        "[1] 884.479\n",
        "> ",
        "# L200 10x",
        "> ",
        "mean(apply(CntA[2,,7,2,],1,sum)/(1642+1202), na.rm=T)   # 0.90475",
        "[1] 0.8727496\n",
        "> ",
        "mean(apply(CntA[2,,7,c(3,5),],1,sum)/(2*1998), na.rm=T)  # 7.51e-05",
        "[1] 0.002627628\n",
        "> ",
        "mean(TimeM[2,], na.rm=TRUE)",
        "[1] 1183.876\n",
        "> ",
        "1 - 0.9047468",
        "[1] 0.0952532\n",
        "> ",
        "1 - 0.8727496",
        "[1] 0.1272504\n\nRestarting R session...\n\n"
    ]
}