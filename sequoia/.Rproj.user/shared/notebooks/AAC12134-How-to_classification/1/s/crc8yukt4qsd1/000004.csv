"0","# make mock lifehistory data for this example:"
"0","# all individuals same birth year + specifying non-overlapping generations"
"0","# ensures that parent-offspring, aunt/uncle, etc. are not considered as "
"0","# relationship alternatives. "
"0","LHX <- data.frame(id = rownames(GM),"
"0","                  Sex = 3,"
"0","                  BirthYear = 1)"
"0",""
"0","AP <- MakeAgePrior(Discrete=TRUE, Plot=FALSE)"
"2","Ageprior: Flat 0/1, discrete generations, MaxAgeParent = 1,1
"
"0","args.pairLL <- list(AgePrior = AP,"
"0","                    Complex = ""simp"","
"0","                    Err = 0.005, ErrFlavour = ""version2.0"","
"0","                    Tassign = 1.0, Tfilter = -2.0)"
"0","# use Complex='simp' to also calculate likelihood to be half-siblings, "
"0","# Complex='mono' will only calculate as full siblings, full cousins, and unrelated"
"0",""
"0","# calculate log10-likelihoods"
"0","PairsList.LL <- list()"
"0","for (x in c(""FS"", ""HS"", ""U"", ""Unk"")) {"
"0","  PairsList.LL[[x]] <- do.call(sequoia::CalcPairLL,"
"0","                        c(list(Pairs = PairsList[[x]],"
"0","                               GenoM = GM,"
"0","                               LifeHistData = LHX),"
"0","                          args.pairLL, Plot=FALSE))"
"0","}"
