{
    "collab_server" : "",
    "contents" : "# test confprob with parent-pairs\n\n\n\n#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n# requires new ComparePeds option: Symmetrical\n\nlibrary(sequoia)\nsetwd(\"E:/Sequoia/test/test_simdata\")\ndata(LH_HSg5, Ped_HSg5, package=\"sequoia\")\n\nGM <- SimGeno(Ped = Ped_HSg5, nSnp = 100, ParMis=c(.2,.5), SnpError = 5e-3)\nSeqOUT <- sequoia(GenoM = GM,  LifeHistData = LH_HSg5,\n                  Err=5e-3, MaxSibIter=10, CalcLLR = FALSE)\n\n\n\n#~~~~~~~~\nPed1 = Ped_HSg5\nPed2 = SeqOUT$Pedigree\nDumPrefix = c(\"F0\", \"M0\")\nSNPd = NULL\nSymmetrical = FALSE\n\nPC1 <- PedCompare(Ped_HSg5, SeqOUT$Pedigree, Symmetrical = FALSE)\nPC2 <- PedCompare(SeqOUT$Pedigree, Ped_HSg5, Symmetrical = FALSE)\nPC3 <- PedCompare(Ped_HSg5, SeqOUT$Pedigree, Symmetrical = TRUE)\n\nPC1$Counts[,,1]\n#     class\n# cat  Total Match Mismatch P1only P2only\n#   GG   725   719        1      5      0\n#   GD   186   162       17      7      0\n#   GT   911   881       18     12      0\n#   DG    43    42        1      0      0\n#   DD     6     6        0      0      0  <<\n#   DT    49    48        1      0      0\n#   TT   965   929       19     12      5\nPC3$Counts[,,1]\n#     class\n# cat  Total Match Mismatch P1only P2only\n#   GG   729   719        5      5      0\n#   GD   182   162       13      7      0\n#   GT   911   881       18     12      0\n#   DG    47    42        1      0      4\n#   DD     7     6        0      0      1  <<\n#   DT    54    48        1      0      5\n#   TT   965   929       19     12      5\n\nPC3$MergedPed[which(PC3$MergedPed$id.dam.cat==\"DD\"), ]\n#        id  dam.1 sire.1 dam.2 sire.2    id.r   dam.r sire.r id.dam.cat id.sire.cat dam.class sire.class\n# 946 F0010 a01108 b01096 F0014 b01096  a02192  a01108   <NA>         DD          DG     Match      Match\n# 969 M0003 a01176 b01014 F0013 b01014  b02071  a01176   <NA>         DD          DG     Match      Match\n# 971 M0005 a01025 b01159 F0015 b01159  b02061  a01025   <NA>         DD          DG     Match      Match\n# 976 M0010   <NA>   <NA> F0020 b03024 nomatch nomatch   <NA>         DD          DG    P2only     P2only  <<  OK!\n# 981 M0015 a02120 b02115 F0009 b02115  b03125  a02120   <NA>         DD          DG     Match      Match\n# 989 M0023 a03143 b03033 F0003 b03033  b04152  a03143   <NA>         DD          DG     Match      Match\n# 996 M0030 a01181 b01021 F0006 b01021  b02134  a01181   <NA>         DD          DG     Match      Match\n\n\nPC1$Counts[\"TT\",,]\n#           parent\n# class      dam sire\n#   Total    965  965\n#   Match    929  931\n#   Mismatch  19   19\n#   P1only    12   10\n#   P2only     5    5\n\n# ER: (19+5)/1000 = 0.025\n# Conf: 929/(929+19+5) = 0.975\n\n\n#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n# EstConf <- function(Pedigree = NULL,\n#                     LifeHistData = NULL,\n#                     args.sim = list(nSnp = 400, SnpError = 1e-3, ParMis=c(0.4, 0.4)),\n#                     args.seq = list(MaxSibIter = 10, Err=1e-3, Tassign=0.5),\n#                     nSim = 10,\n#                     Return = \"all\",\n#                     quiet=TRUE)\n\n\nEC <- EstConf(SeqOUT$Pedigree,\n              LH_HSg5,\n              args.sim = list(nSnp=100, SnpError=5e-3, ParMis=c(.2,.5)),\n              args.seq = list(Err=5e-3),\n              nSim = 2)\n\n# Error in SeqParSib(ParSib = \"sib\", Specs = Specs, ErrM = ErrM, GenoM = GenoM,  :\n#     ERROR! ***Empty sibship!***\n\n\nPedigree = SeqOUT$Pedigree\nLifeHistData = LH_HSg5\nargs.sim = list(nSnp=100, SnpError=5e-3, ParMis=c(.2,.5))\nargs.seq = list(Err=5e-3)\nnSim = 2\nReturn = \"all\"\nquiet = FALSE\n\n# OK, reproducible.\n\nargs.seq = list(Err=5e-3, MaxSibIter=0)\nParOUT <- do.call(sequoia, c(list(GenoM = GM,\n                                  LifeHistData = LifeHistData,\n                                  quiet = seq.quiet,\n                                  Plot = FALSE),\n                             args.seq) )\n\n\n\nwriteSeq(ParOUT, GM, folder=\"2020-05/Ped_HSg5x_a\")\n# runs fine.\n\nPedS <- read.table(\"2020-05/Ped_HSg5x_a/Pedigree_seq.txt\", header=T)\nPCS <- PedCompare(SeqOUT$Pedigree, PedS, SNPd=rownames(GM), Symmetrical=FALSE)\nPCS$Counts[\"TT\",,]\n#           parent\n# class      dam sire\n#   Total    993  996\n#   Match    781  694\n#   Mismatch 149  231\n#   P1only    55   62\n#   P2only     8    9\n\n# emmmmmm ???\n\nView(PCS$Mismatch)\n# over-enthousiastic merging/adding. Ignore.\n\n#~~~~~~~~~~~\n# where do SA & R differ?\nargs.seq = list(Err=5e-3)\nSeq.i <- do.call(sequoia, c(list(GenoM = GM,\n                                  LifeHistData = LifeHistData,\n                                  quiet = \"verbose\",\n                                  Plot = FALSE),\n                             args.seq) )\n# error right away?\n# AllowEmptySibship = TRUE in subroutine initiate --> nope\n\n# Oh no!\n# [1] 1 2 0   k - s- ns(s,k)\n\n# > fixed. (DummyPrefix)\n\n#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nround(EC$ConfProb.pair[\"Confidence\",\"G\",,], 3)\n#        sire.cat\n# dam.cat     G     D  X\n#       G 0.965 0.979  1\n#       D 0.961 0.972  1\n#       X 1.000 1.000 NA\n\n# TODO: dataframe: id.cat - dam.cat - sire.cat - dam.conf - sire.conf - pair.conf\n# NOT: confProb.single, ConfProb.pair\n# SEPARATE: prop. non-assigned\n\n\n# intermediate array for confidence: 2x3x3 x 3 (dam.conf - sire.conf - pair.conf)\n\n #~~~~~~~~~~~\n# confidence & non-assigned per parent-pair\nCPP.i <- array(dim=c(nSim, 2,2,3,3),\n               dimnames = list(1:nSim,\n                               id.cat=c(\"G\",\"D\"),\n                               dam.cat= CatNames,\n                               sire.cat=CatNames,\n                               Conf=c(\"dam.conf\", \"sire.conf\", \"pair.conf\")))\nfor (i in 1:nSim) {\n  CPP.i[i,,,,] <- CalcPairConf(PedCompOUT$Counts.detail, ParSib)\n}\nConf.A <- apply(CPP.i, 2:5, mean)\n\n\n#~~~~~~~~~\n# CalcPairConf - new\nPedCompDetails <- EC$SimCountsDetail[1,,,,,]\n\nCP <- array(NA, dim=c(2,3,3,3),\n              dimnames=c(list(\"id.cat\"=c(\"G\",\"D\")), dimnames(PedCompDetails)[2:3],\n                               list(Conf=c(\"dam\", \"sire\", \"pair\"))))\ntots2 <- c(\"Match\", \"Mismatch\", \"P2only\")   # total assigned in pedigree 2\nnot2 <- c(\"P1only\", \"_\")\nm <- ifelse(ParSib==\"par\", 1, 2)\nCD <- PedCompDetails\nfor (i in 1:2) {\n  # parent-pairs\n  for (j in 1:m) {\n    for (k in 1:m) {\n      CP[i,j,k, \"dam\"] <- sum(CD[i,j,k,\"Match\", tots2]) / sum(CD[i,j,k,tots2, tots2])\n      CP[i,j,k, \"sire\"] <- sum(CD[i,j,k,tots2,\"Match\"]) / sum(CD[i,j,k,tots2,tots2])\n      CP[i,j,k, \"pair\"] <- CD[i,j,k,\"Match\", \"Match\"] / sum(CD[i,j,k,tots2, tots2])\n    }\n  }\n  # single dams\n  for (j in 1:m) {\n    CP[i,j,\"X\",\"dam\"] <- sum(CD[i,j,,\"Match\", not2]) / sum(CD[i,j,, tots2, not2])\n  }\n  # single sires\n  for (k in 1:m) {\n    CP[i,\"X\",k,\"sire\"] <- sum(CD[i,,k,not2,\"Match\"]) / sum(CD[i,,k, not2,tots2])\n  }\n}\n\nCP.DF <- plyr::adply(CP, 1:3)\nNsim <- apply(PedCompDetails, 1:3, sum)\nCP.DF <- merge(CP.DF, plyr::adply(Nsim, 1:3),\n               by=c(\"id.cat\", \"dam.cat\", \"sire.cat\"), all.x=TRUE)\n\n\n\n# TODO: use weighed average across sims\n# TODO: round confidence levels to appropriate no. decimales\n# TODO: prop. non-assigned? -- NO.\n\n\n\n\nEC <- EstConf(SeqOUT$Pedigree,\n              LH_HSg5,\n              args.sim = list(nSnp=100, SnpError=5e-3, ParMis=c(.2,.5)),\n              args.seq = list(Err=5e-3),\n              nSim = 10)\n\nEC$ConfProb\n#    id.cat dam.cat sire.cat dam.conf sire.conf pair.conf    N\n# 13      G       G        D   0.9935    0.9791    0.9767 4198\n# 14      G       G        G   0.9950    0.9899    0.9878 1393\n# 15      G       G        X   0.8200        NA        NA   31\n# 10      G       D        D   0.9557    0.9584    0.9336 2207\n# 11      G       D        G   0.9670    0.9800    0.9560  803\n# 12      G       D        X   0.8300        NA        NA   17\n# 16      G       X        D       NA    0.8500        NA   52\n# 17      G       X        G       NA       NaN        NA   10\n# 18      G       X        X       NA        NA        NA  240\n# 4       D       G        D   0.9200    0.9010    0.8960  432\n# 5       D       G        G   0.9320    0.9250    0.9250  150\n# 6       D       G        X      NaN        NA        NA   15\n# 1       D       D        D   0.8990    0.9070    0.8720  166\n# 2       D       D        G   0.9300    0.9400    0.9300   98\n# 3       D       D        X      NaN        NA        NA    7\n# 7       D       X        D       NA       NaN        NA   13\n# 8       D       X        G       NA       NaN        NA    9\n# 9       D       X        X       NA        NA        NA  322\n\n\n# TODO: fix NA's\n# e.g. D-G-X\n\nCPP.i[,\"D\",\"G\",\"X\",]\n  #   Conf\n  #    dam.conf sire.conf pair.conf\n  # 1       NaN        NA        NA\n  # 2       NaN        NA        NA\n  # 3       NaN        NA        NA\n  # 4       1.0        NA        NA\n  # 5       0.0        NA        NA\n  # 6       0.0        NA        NA\n  # 7       0.0        NA        NA\n  # 8       NaN        NA        NA\n  # 9       0.0        NA        NA\n  # 10      0.5        NA        NA\n\nNi[,\"D\",\"G\",\"X\"]\n # 1  2  3  4  5  6  7  8  9 10\n # 1  0  1  1  1  3  3  2  1  2\n\n# why NA for iteration 8?\n\nPCD[8,\"D\",\"G\",\"X\",,]\n#           sire.class\n# dam.class  Match Mismatch P1only P2only _\n#   Match        2        0      0      0 0\n#   Mismatch     0        0      0      0 0\n#   P1only       0        0      0      0 0\n#   P2only       0        0      0      0 0\n#   _            0        0      0      0 0\n\n# why 'Match' when sire is 'X' ?\n\n# PedCompOUT <- PedCompare(Ped1 = Seq.i$PedigreePar, Ped2 = PedA,\n#                          SNPd = rownames(GM), Symmetrical=FALSE)\n# PCD[i,,,,,] <- PedCompOUT$Counts.detail\n\n# TODO: save MergedPed ?\n\n\n#~~~~~~~~~~~~~~~~~\n# new, iteration 1\nPCD[i,\"G\",\"G\",\"X\",,]\n#           sire.class\n# dam.class  Match Mismatch P1only P2only _\n#   Match        1        0      0      0 2\n#   Mismatch     0        0      0      0 0\n#   P1only       0        0      0      0 0\n#   P2only       0        0      0      0 0\n#   _            0        0      0      0 0\n\nwith(PedCompOUT$MergedPed, PedCompOUT$MergedPed[id.dam.cat==\"GG\" & id.sire.cat==\"GX\", ])\n#         id  dam.1 sire.1  dam.2 sire.2   id.r dam.r sire.r id.dam.cat id.sire.cat dam.class sire.class\n# 232 a03099 a02106   <NA> a02106   <NA> a03099  <NA>   <NA>         GG          GX     Match          _\n# 491 b01034 a00006  M0014 a00006  M0014 b01034  <NA>  M0014         GG          GX     Match      Match\n# 721 b03174 a02160   <NA> a02160   <NA> b03174  <NA>   <NA>         GG          GX     Match          _\n\n# >> fixed (Symmetrical=FALSE was set only for ParSib = \"par\")\n\n\n#~~~~~~~~~~~~~~~~~~~~~~~~~~\nEC <- EstConf(SeqOUT$Pedigree,\n              LH_HSg5,\n              args.sim = list(nSnp=100, SnpError=5e-3, ParMis=c(.2,.5)),\n              args.seq = list(Err=5e-3),\n              nSim = 1)\nEC$ConfProb\n#    id.cat dam.cat sire.cat dam.conf sire.conf pair.conf    N\n# 13      G       G        D   0.9000    0.9300    0.9000   34\n# 14      G       G        G   0.8100    1.0000    0.8100   27\n# 15      G       G        X      NaN        NA        NA    1\n# 10      G       D        D   0.9900    0.9900    0.9900  104\n# 11      G       D        G   1.0000    1.0000    1.0000   95\n# 12      G       D        X      NaN        NA        NA    5  <<\n# 16      G       X        D       NA       NaN        NA    7  <<\n# 17      G       X        G       NA       NaN        NA    2  <<\n# 18      G       X        X       NA        NA        NA  108  OK\n# 4       D       G        D   0.9070    0.9760    0.9020  411\n# 5       D       G        G   0.8290    0.9450    0.8220  439\n# 6       D       G        X      NaN        NA        NA    2\n# 1       D       D        D   0.9960    0.9931    0.9909 1750\n# 2       D       D        G   0.9882    0.9933    0.9854 1786\n# 3       D       D        X   1.0000        NA        NA   41\n# 7       D       X        D       NA    1.0000        NA   31\n# 8       D       X        G       NA       NaN        NA   20  <<\n# 9       D       X        X       NA        NA        NA  230\n\n# not fixed.\n\n\n# TODO: nSim=1 :\n# Error in CPP.i[, , , , x] * Ni : non-conformable arrays\n\n\nPedigree = SeqOUT$Pedigree\nLifeHistData = LH_HSg5\nargs.sim = list(nSnp=100, SnpError=5e-3, ParMis=c(.2,.5))\nargs.seq = list(Err=5e-3)\nnSim = 1\nReturn = \"all\"\nquiet=TRUE\n\n\n# fixed: auto-dropping array dimension when nSim=1 (added ghost iteration)\n# fixed: incorrect categories (Cat columns weren't factors in PedCompare out)\n\n\n\nEC <- EstConf(SeqOUT$Pedigree,\n              LH_HSg5,\n              args.sim = list(nSnp=100, SnpError=5e-3, ParMis=c(.2,.5)),\n              args.seq = list(Err=5e-3),\n              nSim = 4)\n\n# PedCompare(Ped1 = PedB, Ped2 = PedA,\nEC$ConfProb\n#    id.cat dam.cat sire.cat dam.conf sire.conf pair.conf    N\n# 1       G       G        G   0.9912    0.9879    0.9846 1817\n# 2       G       G        D   0.9866    0.9640    0.9597 1638\n# 3       G       G        X   1.0000        NA        NA   46\n# 4       G       D        G   0.9150    0.9340    0.9050  425\n# 5       G       D        D   0.7640    0.7980    0.6960  415\n# 6       G       D        X   0.0000        NA        NA    5\n# 7       G       X        G       NA    0.8800        NA   38\n# 8       G       X        D       NA    0.6800        NA   26\n# 9       G       X        X       NA        NA        NA  300\n# 10      D       G        G   0.9700    0.9700    0.9700   82\n# 11      D       G        D   0.9890    0.9760    0.9760  104\n# 12      D       G        X   0.0000        NA        NA    6\n# 13      D       D        G   0.9600    1.0000    0.9600   24\n# 14      D       D        D   0.7800    0.8800    0.7200   42\n# 15      D       D        X   0.0000        NA        NA    5\n# 16      D       X        G       NA    0.0000        NA    3  << really? --> yes.\n# 17      D       X        D       NA    0.0000        NA    6\n# 18      D       X        X       NA        NA        NA  132\n\n\n\n# PedCompare(Ped1 = PedA, Ped2 = PedB,\n\n\n#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n# test examples\n\ndata(SimGeno_example, LH_HSg5, package=\"sequoia\")\n\nconf.A <- EstConf(Pedigree = Ped_HSg5, LifeHistData = LH_HSg5,\n   args.sim = list(nSnp = 100, SnpError = 5e-3, ParMis=c(0.2, 0.5)),\n   args.seq = list(MaxSibIter = 0, Err=1e-3, Tassign=0.5),\n   nSim = 2)\n\n# parent-pair confidence, per category:\nconf.A$ConfProb\n\n# PedCompOUT$Counts[\"GG\",,] from simulation 1: (ignores co-parent)\nconf.A$SimCounts[1,,]\n\n# calculate assignment and error rate for dams & sires, per iteration:\nAR <- apply(conf.A$SimCounts, c(1,3), function(V) V[\"Match\"]/V[\"Total\"])\nER <- apply(conf.A$SimCounts, c(1,3), function(V) {\n  sum(V[c(\"Mismatch\", \"P2only\")])/V[\"Total\"]})\ncolMeans(AR)\n\n# detailed results you can find here:\ndimnames(conf.A$SimCountsDetail)\n\n\n#~~ with sibship clustering  ~~\nconf.B <- EstConf(Pedigree = Ped_HSg5, LifeHistData = LH_HSg5,\n   args.sim = list(nSnp = 200, SnpError = 5e-3, ParMis=c(0.2, 0.5)),\n   args.seq = list(MaxSibIter = 10, Err=1e-3, Tassign=0.5),\n   nSim = 3)\n\n# calculate assignment and error rate for dams & sires (ignoring co-parent):\nAR <- apply(conf.B$SimCounts, 1,\n            function(M) M[\"TT\",\"Match\", ]/M[\"TT\",\"Total\", ])\nER <- apply(conf.B$SimCounts, 1,\n       function(M) (M[\"TT\",\"Mismatch\", ] + M[\"TT\",\"P2only\", ])/\n         M[\"TT\",\"Total\", ])\nrowMeans(ER)\n\n\n\nconf.A$ConfProb\n#    id.cat dam.cat sire.cat dam.conf sire.conf pair.conf   N\n# 1       G       G        G        1         1         1 716\n# 2       G       G        D        0         0         0 740  <<\n# 3       G       G        X      NaN        NA        NA   0  <<  no good\n# 4       G       D        G        0         0         0 204\n# 5       G       D        D        0         0         0 163\n# 6       G       D        X      NaN        NA        NA   0\n# 7       G       X        G       NA       NaN        NA   0\n# 8       G       X        D       NA       NaN        NA   0\n# 9       G       X        X       NA        NA        NA  49\n\n\n\nNb <- Ni\nNb[,,\"X\",] <- Nb[,,\"X\",] + Nb[,,\"D\",]\nNb[,,\"D\",] <- 0\nNb[,,,\"X\"] <- Nb[,,,\"X\"] + Nb[,,,\"D\"]\nNb[,,,\"D\"] <- 0\n\nNi[1,\"D\",,]\n#        sire.cat\n# dam.cat  G  D X\n#       G 22 15 0\n#       D  7 11 0\n#       X  0  0 9\n\n\nPedigree = Ped_HSg5\nLifeHistData = LH_HSg5\nargs.sim = list(nSnp=100, SnpError=5e-3, ParMis=c(.2,.5))\nargs.seq = list(MaxSibIter = 0, Err=1e-3)\nnSim = 2\nquiet=TRUE\n\n\n#~~~~~~~~~~~~~~~~\n# add conf to real pedigree  (instead of conf.B)\n\nSeqOUT <- sequoia(GenoM = MyGenotypeData,\n                  LifeHistData = MyLHData,\n                  Err=5e-3, MaxSibIter=10)\nEC <- EstConf(Pedigree = SeqOUT$Pedigree,\n              LifeHistData = MyLHData,\n              args.sim = list(nSnp = 438, SnpError = 5e-3, ParMis=c(0.2, 0.5)),\n              args.seq = list(MaxSibIter = 10, Err=5e-3),\n              nSim = 3)\nPed.withConf <- getAssignCat(Pedigree = SeqOUT$Pedigree,\n                             Genotyped = rownames(MyGenotypeData))\nPed.withConf <- merge(Ped.withConf, EC$ConfProb, all.x=TRUE)\n\n\n\n\nRealGenotypes <- SimGeno(Ped = Ped_HSg5, nSnp = 100, ParMis=c(0.19,0.53), SnpError = 6e-3)\nSeqOUT <- sequoia(GenoM = RealGenotypes,\n                  LifeHistData = LH_HSg5,\n                  Err=5e-3, MaxSibIter=10)\n\nEC <- EstConf(Pedigree = SeqOUT$Pedigree,\n              LifeHistData = LH_HSg5,\n              args.sim = list(nSnp = 100, SnpError = 5e-3, ParMis=c(0.2, 0.5)),\n              args.seq = list(Err=5e-3, MaxSibIter = 10),\n              nSim = 3)\nPed.withConf <- getAssignCat(Pedigree = SeqOUT$Pedigree,\n                             Genotyped = rownames(RealGenotypes))\nPed.withConf <- merge(Ped.withConf, EC$ConfProb, all.x=TRUE)\nPed.withConf <- Ped.withConf[, c(\"id\",\"dam\",\"sire\", \"dam.conf\", \"sire.conf\",\n                                 \"id.cat\", \"dam.cat\", \"sire.cat\")]\n\n\n\n\n#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n# 2020-05-06\n\nPC.fwd <- PedCompare(Ped1 = DeerRefPed, Ped2 = DeerPed18,\n                     SNPd = rownames(GM), Symmetrical=FALSE)\nbla <- sweep(PC.fwd$Counts[,c(\"P1only\", \"P2only\",\"Mismatch\"),], c(1,3),\n                                 PC.fwd$Counts[,\"Total\",], \"/\")\n\n\nEC <- EstConf(Pedigree = SeqOUT$Pedigree,\n              LifeHistData = LH_HSg5,\n              args.sim = list(nSnp = 100, SnpError = 5e-3, ParMis=c(0.2, 0.5)),\n              args.seq = list(Err=5e-3, MaxSibIter = 10),\n              nSim = 4)\n\n\nPedigree = SeqOUT$Pedigree\nLifeHistData = LH_HSg5\nargs.sim = list(nSnp = 100, SnpError = 5e-3, ParMis=c(0.2, 0.5))\nargs.seq = list(Err=5e-3, MaxSibIter = 10)\nnSim = 2\nquiet=TRUE\n\n\n\nPed.withConf <- getAssignCat(Pedigree = SeqOUT$Pedigree,\n                             Genotyped = rownames(GM))\nPed.withConf <- merge(Ped.withConf, EC$ConfProb, all.x=TRUE, sort=FALSE)\nPed.withConf <- Ped.withConf[, c(\"id\",\"dam\",\"sire\", \"dam.conf\", \"sire.conf\",\n                                 \"id.cat\", \"dam.cat\", \"sire.cat\")]\n\n\n\n#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nsetwd(\"E:/Sequoia/test/test_simdata\")\nPed_deer <- read.table(\"Ped_2k.txt\", header=T, stringsAsFactors=F)\nLH_deer <- read.table(\"CodeSexBY.txt\", header=T, stringsAsFactors=F)\n\nEC.2k <- EstConf(Pedigree = Ped_deer,\n                 LifeHistData = LH_deer,\n                 args.sim = list(nSnp = 200, SnpError = 1e-4, ParMis=0.0),\n                 args.seq = list(Err=1e-4, MaxSibIter = 0),\n                 nSim = 5)\n\n# L=100, nSim=10:\nmean(EC.2k$RunTime)   # 60.3s. MS: 15s?\n\napply(EC.2k$PedErrors, 1:2, mean)\n#     class\n# cat    FalseNeg   FalsePos    Mismatch\n#   GG 0.00360295         NA 0.000243605\n#   GD        NaN         NA         NaN\n#   GT 0.00360170 0.00047608 0.000243585\n#   DG        NaN         NA         NaN\n#   DD        NaN         NA         NaN\n#   DT        NaN        NaN         NaN\n#   TT 0.00360170 0.00047608 0.000243585\n\n# AR: 0.99615 ; MS:  0.983. OK\n# ER: 7.197E-4, MS: 6.0E-4. OK.\n\n# L=200, nsim=5:\n# Time: 91.4s   << WHY SO SLOW? WAS: 14.3s\n# AR: 0.999036\n# ER: 0\n",
    "created" : 1588490356869.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3146284043",
    "id" : "CD8410B1",
    "lastKnownWriteTime" : 1588846346,
    "last_content_update" : 1588846346566,
    "path" : "E:/Sequoia/test/confprob_test.R",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}